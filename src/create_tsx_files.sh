#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≤—Å–µ—Ö .tsx —Ñ–∞–π–ª–æ–≤ –∏–∑ –ø—Ä–æ–µ–∫—Ç–∞ Orchids –≤ –ø–∞–ø–∫–µ ui

# –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É ui –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
mkdir -p ui

# –ú–∞—Å—Å–∏–≤ –≤—Å–µ—Ö .tsx —Ñ–∞–π–ª–æ–≤
tsx_files=(
    # –ö–æ–Ω—Ç–∞–∫—Ç —Ñ–æ—Ä–º—ã
    "comprehensive-contact-form.tsx"
    
    # –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Å–µ–∫—Ü–∏–∏
    "header-with-card-grid.tsx"
    "numbered-badge-cards.tsx"
    "three-column-image-cards.tsx"
    "two-column-with-image.tsx"
    
    # –ü–æ–¥–≤–∞–ª—ã
    "newsletter-footer.tsx"
    
    # –ì–µ—Ä–æ–∏
    "two-column-hero-with-image.tsx"
    
    # –ù–∞–≤–∏–≥–∞—Ü–∏—è
    "floating-navbar.tsx"
    
    # UI –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
    "accordion.tsx"
    "alert-dialog.tsx"
    "alert.tsx"
    "aspect-ratio.tsx"
    "avatar.tsx"
    "background-boxes.tsx"
    "badge.tsx"
    "breadcrumb.tsx"
    "button.tsx"
    "calendar.tsx"
    "card.tsx"
    "carousel.tsx"
    "chart.tsx"
    "checkbox.tsx"
    "collapsible.tsx"
    "command.tsx"
    "ComponentSeparator.tsx"
    "container-scroll-animation.tsx"
    "context-menu.tsx"
    "dialog.tsx"
    "drawer.tsx"
    "dropdown-menu.tsx"
    "form.tsx"
    "hover-card.tsx"
    "input-otp.tsx"
    "input.tsx"
    "label.tsx"
    "menubar.tsx"
    "navigation-menu.tsx"
    "navigation.tsx"
    "pagination.tsx"
    "popover.tsx"
    "progress.tsx"
    "radio-group.tsx"
    "resizable.tsx"
    "scroll-area.tsx"
    "select.tsx"
    "separator.tsx"
    "sheet.tsx"
    "sidebar.tsx"
    "skeleton.tsx"
    "slider.tsx"
    "sonner.tsx"
    "switch.tsx"
    "table.tsx"
    "tabs.tsx"
    "textarea.tsx"
    "toggle-group.tsx"
    "toggle.tsx"
    "tooltip.tsx"
    
    # –£—Ç–∏–ª–∏—Ç—ã
    "ErrorReporter.tsx"
)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è React –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
create_tsx_template() {
    local filename=$1
    local component_name
    
    # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –∏–º—è —Ñ–∞–π–ª–∞ –≤ –∏–º—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ (PascalCase)
    component_name=$(echo "$filename" | sed 's/\.tsx$//' | sed 's/-/ /g' | sed 's/\b\w/\u&/g' | sed 's/ //g')
    
    cat > "ui/$filename" << EOF
import React from 'react';

interface ${component_name}Props {
  // Define your props here
}

const ${component_name}: React.FC<${component_name}Props> = (props) => {
  return (
    <div>
      {/* ${component_name} component */}
      <h1>${component_name}</h1>
    </div>
  );
};

export default ${component_name};
EOF
}

echo "üöÄ –°–æ–∑–¥–∞–Ω–∏–µ ${#tsx_files[@]} .tsx —Ñ–∞–π–ª–æ–≤ –≤ –ø–∞–ø–∫–µ 'ui'..."

created_count=0
skipped_count=0

for file in "${tsx_files[@]}"; do
    if [[ -f "ui/$file" ]]; then
        echo "  ‚ö†Ô∏è  $file —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º..."
        ((skipped_count++))
    else
        create_tsx_template "$file"
        echo "  ‚úÖ –°–æ–∑–¥–∞–Ω: $file"
        ((created_count++))
    fi
done

echo ""
echo "üìä –†–µ–∑—É–ª—å—Ç–∞—Ç:"
echo "  –°–æ–∑–¥–∞–Ω–æ –Ω–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤: $created_count"
echo "  –ü—Ä–æ–ø—É—â–µ–Ω–æ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö: $skipped_count"
echo "  –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–∞–π–ª–æ–≤: ${#tsx_files[@]}"
echo ""
echo "üìÅ –í—Å–µ —Ñ–∞–π–ª—ã —Å–æ–∑–¥–∞–Ω—ã –≤ –ø–∞–ø–∫–µ: $(pwd)/ui"